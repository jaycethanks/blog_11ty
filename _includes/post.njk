---
layout: base.njk
---

<a class="cd-back" href="{{ '/' | url }}">{{ site.back_home_text }}</a>
{# data-pagefind-body 是搜索框架 pagefind用的 #}
<article class="prose" data-pagefind-body>
  <p class="post-meta">
    <time datetime="{{ page.date }}">{{ page.date | formatDate }}</time>
    , with
    <span id="busuanzi_container_page_pv" style="display: inline;"><span id="busuanzi_value_page_pv"></span></span>
    read
    <span>
      {# 定义阅读速度，假设每分钟阅读200个单词 #}
      {% set wordsPerMinute = 200 %}
      {# 计算文章字数 #}
      {% set wordCount = content | safe | wordcount %}
      {# 计算预计阅读时间（以分钟为单位）#}
      {% set readingTimeInMinutes = wordCount / wordsPerMinute %}
      {# 使用 Math.ceil 确保阅读时间不是小数 #}
      {% set estimatedReadingTime = readingTimeInMinutes | round(0, 'ceil') %}
      {# 输出预计阅读时间到页面 #}
      <span>, about {{ estimatedReadingTime }}min.</span>
    </span>
  </p>
  <h1>{{ title }}</h1>
  {{ content | safe }}
</article>
{# giscus 评论系统 #}
<script
  src="https://giscus.app/client.js"
  data-repo="jaycethanks/blog_11ty"
  data-repo-id="R_kgDOK8mrlg"
  data-category="General"
  data-category-id="DIC_kwDOK8mrls4CcEYb"
  data-mapping="pathname"
  data-strict="0"
  data-reactions-enabled="1"
  data-emit-metadata="0"
  data-input-position="top"
  data-theme="noborder_light"
  data-lang="zh-CN"
  crossorigin="anonymous"
  async></script>
<aside>
  {{ content | toc | safe }}
</aside>
<a class="cd-back" href="{{ '/' | url }}">{{ site.back_home_text }}</a>
<a href="javascript:void(0)" onClick="handleGoback()">
  <div class="container-top go-back">
    GO BACK
  </div>
</a>
<a href="#" class="top">
  <div class="container-top">
    BACK TO TOP
  </div>
</a>
<script>

  



  // 处理 GO BACK 点击事件 - START
  const _HISTORY = localStorage.getItem('_HISTORY')
  const HISTORY = JSON.parse(_HISTORY)

  if(!_HISTORY){
    localStorage.setItem('_HISTORY', JSON.stringify([location.origin + location.pathname]))
  }else{
    const CURRENT_URL = location.origin + location.pathname
    if(HISTORY.at(-1) !== CURRENT_URL){
      HISTORY.push(CURRENT_URL)
      localStorage.setItem('_HISTORY', JSON.stringify(HISTORY))
    }
  }

  const handleGoback = ()=>{
    window.open(HISTORY.shift())
  }
  // 处理 GO BACK 点击事件 - END




  // 图片点击的时候方法预览支持
  window.addEventListener("click", (e) => {
    if (e.target.nodeName === "IMG") {
      const w = 800
      const h = 400
      const windowFeatures = `width=${w},height=${h},left=${(window.innerWidth-w)/2},top=${(window.innerHeight-h)/2},directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar=0,scrollbars=no,`;
      window.open(`${window.__PREFIX}preview/?url=${e.target.src}`,'-',windowFeatures)
    }

  /*
    if (e.target.nodeName === "IMG") {
      console.dir(e.target.src)
      createPreviewPop(e.target.src)
    } else {
      document.querySelector("#img-preview") ?. remove()
    } 
  */
  })
  function createPreviewPop(src) {
    let previewPop = document.querySelector("#img-preview")
    if (! previewPop) {
      previewPop = document.createElement("div")
      previewPop.id = 'img-preview';
      previewPop.style = `
         background-color: #fff;
         position:fixed;
         z-index: 2000;
         inset:0;
         display:flex;
         justify-content:center;
         align-items:center
         `
      previewPop.innerHTML = `
         <img src="${src}" style="object-fit: contain;width:100%;height:100%;pointer-events: none;"/>
         `
      document.body.appendChild(previewPop)
    }
    const img = previewPop.querySelector('img')
    img.src = src
  }
</script>